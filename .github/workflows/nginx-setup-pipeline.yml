name: Setup Nginx Server
on:
  workflow_dispatch:
    inputs:
      server_name:
        description: 'Server name to setup'
        required: true
        type: choice
        default: 'Back-End-Server'
        options:
          - 'Back-End-Server'
          - 'Front-End-Server'

jobs:
  build:
    runs-on: self-hosted
    steps:
      - name: Setup nginx without SSL
        if: ${{ inputs.setupFrontEnd == true && inputs.setupBackEnd == true }}
        run: |
          sudo bash -c 'cat <<EOF > /etc/nginx/sites-available/default
            server { 
              listen 80;
              server_name _;
              root ${{ vars.REACT_APP_PATH }};
              index index.html;
              location / {
                      try_files \$uri /index.html;
              }
          
              location /api/ {
                  proxy_pass http://localhost:${{ vars.NODEJS_APP_PORT }}/;
                  proxy_http_version 1.1;
                  proxy_set_header Upgrade \$http_upgrade;
                  proxy_set_header Connection 'upgrade';
                  proxy_set_header Host \$host;
                  proxy_cache_bypass \$http_upgrade;
              }
            }
          EOF'
            
      - name: Setup nginx without SSL
        if: ${{ inputs.setupFrontEnd == true  && inputs.setupBackEnd == false }}
        run: |
            sudo bash -c 'cat <<EOF > /etc/nginx/sites-available/default
              server { 
                listen 80;
                server_name _;
                root ${{ vars.REACT_APP_PATH }};
                index index.html;
                location / {
                        try_files \$uri /index.html;
                }
              }
            EOF'    
            
      - name: Setup nginx without SSL
        if: ${{ inputs.setupBackEnd == true && inputs.setupFrontEnd == false }}
        run: |
          sudo bash -c 'cat <<EOF > /etc/nginx/sites-available/default
            server { 
              listen 80;
              server_name _;
              location /api/ {
                  proxy_pass http://localhost:${{ vars.NODEJS_APP_PORT }}/;
                  proxy_http_version 1.1;
                  proxy_set_header Upgrade \$http_upgrade;
                  proxy_set_header Connection 'upgrade';
                  proxy_set_header Host \$host;
                  proxy_cache_bypass \$http_upgrade;
              }
            }
            EOF'
            
      - name: Cat nginx config file
        if: ${{ inputs.setupFrontEnd == true || inputs.setupBackEnd == true }}
        run: |
          cat /etc/nginx/sites-available/default
          
            
      - name: Restart nginx
        if: ${{ inputs.setupFrontEnd == true || inputs.setupBackEnd == true }}
        run: |
          sudo systemctl restart nginx
          sudo nginx -t
          
